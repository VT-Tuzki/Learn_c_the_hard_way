阅读stdint.h或它的描述，写出所有可能出现的大小定义。
    int     -> 4 bytes -> 32 bits -> -2^32, 2^32-1  -> -2147483648, 2147483647
    unsigned int -> 4 bytes -> 32 bits -> 0, 2^32-1 -> 0, 4294967295

    stdint  -> int length -> 8~64 bits
    int8_t  -> 1 byte  -> 8 bits  -> -2^7, 2^7-1    -> -128, 127
    uint8_t -> 1 byte  -> 8 bits  -> 0   , 2^8-1    -> 0, 255
    int16_t -> 2 bytes -> 16 bits -> -2^15, 2^15-1  -> -32768, 32767
    uint16_t-> 2 bytes -> 16 bits -> 0, 2^16-1      -> 0, 65535
    int24_t -> 3 bytes -> 24 bits -> -2^23, 2^23-1  -> -8388608, 8388607
    uint24_t-> 3 bytes -> 24 bits -> 0, 2^24-1      -> 0, 16777215
    int32_t -> 4 bytes -> 32 bits -> -2^31, 2^31-1  -> -2147483648, 2147483647
    uint32_t-> 4 bytes -> 32 bits -> 0, 2^32-1      -> 0, 4294967295
    int40_t -> 5 bytes -> 40 bits -> -2^39, 2^39-1  -> -549755813888, 549755813887
    uint40_t-> 5 bytes -> 40 bits -> 0, 2^40-1      -> 0, 1099511627775
    int48_t -> 6 bytes -> 48 bits -> -2^47, 2^47-1  -> -140737488355328, 140737488355327
    uint48_t-> 6 bytes -> 48 bits -> 0, 2^48-1      -> 0, 281474976710655
    int56_t -> 7 bytes -> 56 bits -> -2^55, 2^55-1  -> -36028797018963968, 36028797018963967
    uint56_t-> 7 bytes -> 56 bits -> 0, 2^56-1      -> 0, 72057594037927935
    int64_t -> 8 bytes -> 64 bits -> -2^63, 2^63-1  -> -9223372036854775808, 9223372036854775807
    uint64_t-> 8 bytes -> 64 bits -> 0, 2^64-1      -> 0, 18446744073709551615


查询本练习的每一项，写出它在代码中的作用。上网浏览资料来研究它如何正确使用。
将这些信息做成教学卡片，每天看上15分钟来记住它们。
创建一个程序，打印出每个类型的示例，并验证你的研究结果是否正确。